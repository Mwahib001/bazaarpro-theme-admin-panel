/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    categories: Category;
    icons: Icon;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    icons: IconsSelect<false> | IconsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    home: Home;
    header: Header;
  };
  globalsSelect: {
    home: HomeSelect<false> | HomeSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  slug?: string | null;
  title: string;
  price: number;
  image?: (number | null) | Media;
  reviews?:
    | {
        rating: number;
        comment: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  image?: (number | null) | Media;
  subCategories?:
    | {
        title: string;
        id?: string | null;
      }[]
    | null;
  parent?: (number | Category)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icons".
 */
export interface Icon {
  id: number;
  title: string;
  iconImage: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'icons';
        value: number | Icon;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  price?: T;
  image?: T;
  reviews?:
    | T
    | {
        rating?: T;
        comment?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  image?: T;
  subCategories?:
    | T
    | {
        title?: T;
        id?: T;
      };
  parent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icons_select".
 */
export interface IconsSelect<T extends boolean = true> {
  title?: T;
  iconImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: number;
  heroLayout?:
    | {
        heroBannersMainLeft: {
          image?: (number | null) | Media;
          line1?: string | null;
          line2?: string | null;
          line3?: string | null;
          line4?: string | null;
          buttonText?: string | null;
          buttonLink?: string | null;
          id?: string | null;
        }[];
        heroBannersRightTopBottom: {
          image?: (number | null) | Media;
          line1?: string | null;
          line2?: string | null;
          line3?: string | null;
          buttonText?: string | null;
          buttonLink?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero-banners-left-main';
      }[]
    | null;
  contentLayout?:
    | (
        | {
            servicesList?:
              | {
                  title: string;
                  description: string;
                  icon: 'Truck' | 'Payment' | 'AlarmClock' | 'MoneyGuarantee';
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'featuresContRectangle';
          }
        | {
            title: string;
            categories: (number | Category)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryGrid';
          }
        | {
            title: string;
            products: (number | Product)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'deals-of-the-day';
          }
        | {
            image?: (number | null) | Media;
            line1?: string | null;
            line2?: string | null;
            line3?: string | null;
            buttonText?: string | null;
            buttonLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner1';
          }
        | {
            banners: {
              image?: (number | null) | Media;
              line1?: string | null;
              line2?: string | null;
              line3?: string | null;
              buttonText?: string | null;
              buttonLink?: string | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner2';
          }
        | {
            banners: {
              image?: (number | null) | Media;
              line1?: string | null;
              line2?: string | null;
              line3?: string | null;
              buttonText?: string | null;
              buttonLink?: string | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner3';
          }
        | {
            category?: (number | null) | Category;
            products?: (number | Product)[] | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'product-list-with-cat-list';
          }
        | {
            title: string;
            brandsLogos: (number | Media)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'brands-bar-cont';
          }
        | {
            title: string;
            description?: string | null;
            products: (number | Product)[];
            buttonsArray?:
              | {
                  buttonText: string;
                  buttonLink: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'product-carousal-with-filter';
          }
      )[]
    | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  metaKeywords?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  header?:
    | {
        title: string;
        heading: string;
        description?: string | null;
        links: {
          icons: number | Icon;
          url: string;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'topbar';
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  heroLayout?:
    | T
    | {
        'hero-banners-left-main'?:
          | T
          | {
              heroBannersMainLeft?:
                | T
                | {
                    image?: T;
                    line1?: T;
                    line2?: T;
                    line3?: T;
                    line4?: T;
                    buttonText?: T;
                    buttonLink?: T;
                    id?: T;
                  };
              heroBannersRightTopBottom?:
                | T
                | {
                    image?: T;
                    line1?: T;
                    line2?: T;
                    line3?: T;
                    buttonText?: T;
                    buttonLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  contentLayout?:
    | T
    | {
        featuresContRectangle?:
          | T
          | {
              servicesList?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        categoryGrid?:
          | T
          | {
              title?: T;
              categories?: T;
              id?: T;
              blockName?: T;
            };
        'deals-of-the-day'?:
          | T
          | {
              title?: T;
              products?: T;
              id?: T;
              blockName?: T;
            };
        banner1?:
          | T
          | {
              image?: T;
              line1?: T;
              line2?: T;
              line3?: T;
              buttonText?: T;
              buttonLink?: T;
              id?: T;
              blockName?: T;
            };
        banner2?:
          | T
          | {
              banners?:
                | T
                | {
                    image?: T;
                    line1?: T;
                    line2?: T;
                    line3?: T;
                    buttonText?: T;
                    buttonLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        banner3?:
          | T
          | {
              banners?:
                | T
                | {
                    image?: T;
                    line1?: T;
                    line2?: T;
                    line3?: T;
                    buttonText?: T;
                    buttonLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'product-list-with-cat-list'?:
          | T
          | {
              category?: T;
              products?: T;
              id?: T;
              blockName?: T;
            };
        'brands-bar-cont'?:
          | T
          | {
              title?: T;
              brandsLogos?: T;
              id?: T;
              blockName?: T;
            };
        'product-carousal-with-filter'?:
          | T
          | {
              title?: T;
              description?: T;
              products?: T;
              buttonsArray?:
                | T
                | {
                    buttonText?: T;
                    buttonLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  metaTitle?: T;
  metaDescription?: T;
  metaKeywords?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  header?:
    | T
    | {
        topbar?:
          | T
          | {
              title?: T;
              heading?: T;
              description?: T;
              links?:
                | T
                | {
                    icons?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}